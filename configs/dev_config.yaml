# Development Configuration File for vAIn Project

project:
  name: vAIn
  description: >
    vAIn (Virtual Artificial Intelligence Network) is an advanced AGI framework,
    designed to integrate reinforcement learning, dynamic memory systems, and adaptive
    policies for evolving intelligence.
  version: 1.0.0
  author: Vincent Janse van Rensburg
  license: Apache-2.0
  repository: https://github.com/username/vAIn
  keywords:
    - AGI
    - artificial_intelligence
    - vAIn
    - reinforcement_learning
    - memory_management
    - adaptive_systems

environment:
  python_version: "3.10"
  virtual_env:
    enabled: true
    name: vainenv
    path: ./vainenv
  dependencies:
    manager: pip
    requirements_file: requirements.txt
    dev_dependencies:
      - black>=22.0
      - isort>=5.0
      - flake8>=4.0
      - pytest>=7.0
      - mypy>=1.0
      - pre-commit>=2.0
      - coverage>=6.0
      - sphinx>=5.0
      - pylint>=3.0
  system_dependencies:
    - make
    - docker
    - git
    - graphviz  # Required for Sphinx diagrams

paths:
  src: ./src
  configs: ./configs
  tests: ./tests
  logs: ./logs
  backups: ./backups
  docs: ./docs
  data: ./data
  models: ./models
  artifacts: ./artifacts
  temp: ./temp
  memory_snapshots: ./memory/snapshots
  cache: ./cache

debugging:
  enabled: true
  tools:
    - pdb
    - ipdb
    - debugpy
  log_level: DEBUG
  logging:
    file: ./logs/vain_debug.log
    console: true
    format: "[%(asctime)s] [%(levelname)s] %(module)s: %(message)s"
    retention_days: 30

ci_cd:
  enabled: true
  pipeline:
    pre_commit_hooks:
      - id: black
        name: Code formatting with Black
      - id: flake8
        name: Linting with Flake8
      - id: mypy
        name: Type checking with MyPy
    stages:
      - install_dependencies
      - lint_code
      - run_tests
      - build_artifacts
      - deploy
    testing:
      runner: pytest
      coverage:
        threshold: 85  # Minimum test coverage
        report_format: xml
    notifications:
      email:
        enabled: true
        recipients:
          - dev-team@vainproject.com
      slack:
        enabled: true
        webhook_url: "https://hooks.slack.com/services/xxxxx/yyyyy/zzzzz"

memory_management:
  debug_mode: true
  profiling_tools:
    - memory_profiler
    - tracemalloc
  optimization:
    memory_check_frequency: 30  # seconds
    max_allowed_usage: 70  # percentage
  storage_limits:
    short_term_memory: 1500
    long_term_memory: 500000
    episodic_memory: 20000
    working_memory: 800
  snapshot_frequency: 3600  # Take memory snapshots every hour

ai_model_config:
  primary_model: GPT-4
  reinforcement_learning:
    algorithm: PPO
    hyperparameters:
      learning_rate: 0.00025
      gamma: 0.98
      batch_size: 64
      entropy_coefficient: 0.005
    checkpoint_frequency: 5000  # steps
    training_environments:
      - MazeNavigation
      - MultiAgentCooperation
      - DynamicProblemSolving
  adaptation:
    enabled: true
    strategies:
      - continual_learning
      - domain_adaptation
    dynamic_tuning:
      enabled: true
      trigger_conditions:
        - performance_drop
        - new_context_identification

collaboration:
  enabled: true
  tools:
    version_control: git
    repository: https://github.com/username/vAIn
    communication: slack
    documentation: confluence
    ticketing: jira

testing:
  coverage_threshold: 85
  framework: pytest
  test_types:
    unit_tests: true
    integration_tests: true
    performance_tests: true
    memory_stress_tests: true
  reporting:
    format: html
    output: ./artifacts/test_reports
  automation:
    enabled: true
    trigger_conditions:
      - new_commit
      - nightly_build
      - manual_trigger

notifications:
  enabled: true
  platforms:
    email:
      enabled: true
      recipients:
        - dev-lead@vainproject.com
        - qa-team@vainproject.com
    slack:
      enabled: true
      channel: "#vain-dev"
  conditions:
    - test_failure
    - build_completion
    - deployment_failure
    - high_memory_usage

performance_profiling:
  enabled: true
  tools:
    - cProfile
    - py-spy
    - line_profiler
  profiling_targets:
    - src/reinforcement_learning/agent.py
    - src/memory/environment.py
    - src/memory/policy.py
  reporting:
    output_path: ./artifacts/performance_profiles
    format: pdf

deployment:
  environments:
    staging:
      url: https://staging.vainproject.com
      credentials_file: ./configs/staging_credentials.json
    production:
      url: https://vainproject.com
      credentials_file: ./configs/production_credentials.json
  methods:
    primary: docker
    alternatives:
      - kubernetes
      - serverless

security:
  enabled: true
  encryption:
    enabled: true
    methods:
      - AES-256
  vulnerability_scanning:
    tools:
      - bandit
      - snyk
  secure_storage:
    credentials: ./configs/secure_credentials.json
    sensitive_data_path: ./data/secure/

backup:
  enabled: true
  frequency: daily
  retention_policy:
    max_days: 30
  locations:
    - ./backups
    - s3://vain-project-backups

documentation:
  generator: sphinx
  output: ./docs
  api_reference:
    enabled: true
    source_dir: ./src
  tutorials:
    enabled: true
    examples_dir: ./docs/examples
  diagrams:
    enabled: true
    tools:
      - PlantUML
      - Graphviz
